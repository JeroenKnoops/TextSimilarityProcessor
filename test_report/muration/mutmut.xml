<?xml version="1.0" ?>
<testsuites disabled="0" errors="2" failures="78" tests="263" time="0.0">
	<testsuite disabled="0" errors="2" failures="78" name="mutmut" skipped="0" tests="263" time="0">
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="12" name="Mutant #1">
			<system-out>    cos_parser = argparse.ArgumentParser(description='Text Similarity Index Processor')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="12" name="Mutant #2">
			<system-out>    cos_parser = argparse.ArgumentParser(description='Text Similarity Index Processor')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="15" name="Mutant #3">
			<system-out>    cos_parser.add_argument('--path',</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="16" name="Mutant #4">
			<system-out>                            metavar='--p',</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="18" name="Mutant #5">
			<system-out>                            help='the Input file path')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="20" name="Mutant #6">
			<system-out>    cos_parser.add_argument('--simindex',</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="21" name="Mutant #7">
			<system-out>                            metavar='--s',</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="23" name="Mutant #8">
			<system-out>                            help='the Similarity index to be processed')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="25" name="Mutant #9">
			<system-out>    cos_parser.add_argument('--uniqid',</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="26" name="Mutant #10">
			<system-out>                            metavar='--u',</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="28" name="Mutant #11">
			<system-out>                            help='uniq id index(column) of the input file')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="30" name="Mutant #12">
			<system-out>    cos_parser.add_argument('--colint',</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="31" name="Mutant #13">
			<system-out>                            metavar='--c',</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="33" name="Mutant #14">
			<system-out>                            help='the col of interest')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="38" name="Mutant #15">
			<system-out>if __name__ == '__main__':</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="38" name="Mutant #16">
			<system-out>if __name__ == '__main__':</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="40" name="Mutant #17">
			<system-out>    ARGS = parser = create_parser(sys.argv[1:])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="40" name="Mutant #18">
			<system-out>    ARGS = parser = create_parser(sys.argv[1:])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="42" name="Mutant #19">
			<system-out>    COS_IO_OBJ = CosineIO(ARGS.path, ARGS.simindex, ARGS.uniqid, ARGS.colint, 0)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_cmd.py" line="42" name="Mutant #20">
			<system-out>    COS_IO_OBJ = CosineIO(ARGS.path, ARGS.simindex, ARGS.uniqid, ARGS.colint, 0)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="5" name="Mutant #21">
			<system-out>WORD = re.compile(r'\w+')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="5" name="Mutant #22">
			<system-out>WORD = re.compile(r'\w+')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="6" name="Mutant #23">
			<system-out>LOG = cl.get_logger()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="12" name="Mutant #24">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py
@@ -10,7 +10,7 @@
 def get_cosine(vec1, vec2):
     &quot;&quot;&quot; Function used for getting the cosine value
     vec1, vec2: Input vector from the texts to be compared &quot;&quot;&quot;
-    intersection = set(vec1.keys()) &amp; set(vec2.keys())
+    intersection = set(vec1.keys()) | set(vec2.keys())
     numerator = sum([vec1[x] * vec2[x] for x in intersection])
     sum1 = sum([vec1[x] ** 2 for x in vec1.keys()])
     sum2 = sum([vec2[x] ** 2 for x in vec2.keys()])
</failure>
			<system-out>    intersection = set(vec1.keys()) &amp; set(vec2.keys())</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="12" name="Mutant #25">
			<system-out>    intersection = set(vec1.keys()) &amp; set(vec2.keys())</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="13" name="Mutant #26">
			<system-out>    numerator = sum([vec1[x] * vec2[x] for x in intersection])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="13" name="Mutant #27">
			<system-out>    numerator = sum([vec1[x] * vec2[x] for x in intersection])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="13" name="Mutant #28">
			<system-out>    numerator = sum([vec1[x] * vec2[x] for x in intersection])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="14" name="Mutant #29">
			<system-out>    sum1 = sum([vec1[x] ** 2 for x in vec1.keys()])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="14" name="Mutant #30">
			<system-out>    sum1 = sum([vec1[x] ** 2 for x in vec1.keys()])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="14" name="Mutant #31">
			<system-out>    sum1 = sum([vec1[x] ** 2 for x in vec1.keys()])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="14" name="Mutant #32">
			<system-out>    sum1 = sum([vec1[x] ** 2 for x in vec1.keys()])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="15" name="Mutant #33">
			<system-out>    sum2 = sum([vec2[x] ** 2 for x in vec2.keys()])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="15" name="Mutant #34">
			<system-out>    sum2 = sum([vec2[x] ** 2 for x in vec2.keys()])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="15" name="Mutant #35">
			<system-out>    sum2 = sum([vec2[x] ** 2 for x in vec2.keys()])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="15" name="Mutant #36">
			<system-out>    sum2 = sum([vec2[x] ** 2 for x in vec2.keys()])</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="16" name="Mutant #37">
			<system-out>    denominator = math.sqrt(sum1) * math.sqrt(sum2)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="16" name="Mutant #38">
			<system-out>    denominator = math.sqrt(sum1) * math.sqrt(sum2)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="17" name="Mutant #39">
			<system-out>    if not denominator:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="18" name="Mutant #40">
			<system-out>        cosine_value = 0.0</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="18" name="Mutant #41">
			<system-out>        cosine_value = 0.0</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="20" name="Mutant #42">
			<system-out>        cosine_value = float(numerator / denominator)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="20" name="Mutant #43">
			<system-out>        cosine_value = float(numerator / denominator)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="21" name="Mutant #44">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py
@@ -19,7 +19,7 @@
         cosine_value = 0.0
     else:
         cosine_value = float(numerator / denominator)
-    LOG.info(&quot;get_cosine() value:%f&quot;, cosine_value)
+    LOG.info(&quot;XXget_cosine() value:%fXX&quot;, cosine_value)
     return cosine_value
 
 
</failure>
			<system-out>    LOG.info(&quot;get_cosine() value:%f&quot;, cosine_value)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="28" name="Mutant #45">
			<system-out>    words = WORD.findall(text)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="36" name="Mutant #46">
			<system-out>    if actual_val &gt;= exp_val:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="37" name="Mutant #47">
			<system-out>        tolerance_value = abs(actual_val - exp_val) &lt;= 1</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="37" name="Mutant #48">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py
@@ -35,7 +35,7 @@
     actual_val: what is the actual value after processing the cosine
     exp_val: what is the expected value for the cosine &quot;&quot;&quot;
     if actual_val &gt;= exp_val:
-        tolerance_value = abs(actual_val - exp_val) &lt;= 1
+        tolerance_value = abs(actual_val - exp_val) &lt; 1
     else:
         tolerance_value = 0
     LOG.info(&quot;check_tolerance() value:%d&quot;, tolerance_value)
</failure>
			<system-out>        tolerance_value = abs(actual_val - exp_val) &lt;= 1</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="37" name="Mutant #49">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py
@@ -35,7 +35,7 @@
     actual_val: what is the actual value after processing the cosine
     exp_val: what is the expected value for the cosine &quot;&quot;&quot;
     if actual_val &gt;= exp_val:
-        tolerance_value = abs(actual_val - exp_val) &lt;= 1
+        tolerance_value = abs(actual_val - exp_val) &lt;= 2
     else:
         tolerance_value = 0
     LOG.info(&quot;check_tolerance() value:%d&quot;, tolerance_value)
</failure>
			<system-out>        tolerance_value = abs(actual_val - exp_val) &lt;= 1</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="37" name="Mutant #50">
			<system-out>        tolerance_value = abs(actual_val - exp_val) &lt;= 1</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="39" name="Mutant #51">
			<system-out>        tolerance_value = 0</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="39" name="Mutant #52">
			<system-out>        tolerance_value = 0</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py" line="40" name="Mutant #53">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_core.py
@@ -38,6 +38,6 @@
         tolerance_value = abs(actual_val - exp_val) &lt;= 1
     else:
         tolerance_value = 0
-    LOG.info(&quot;check_tolerance() value:%d&quot;, tolerance_value)
+    LOG.info(&quot;XXcheck_tolerance() value:%dXX&quot;, tolerance_value)
     return tolerance_value
 
</failure>
			<system-out>    LOG.info(&quot;check_tolerance() value:%d&quot;, tolerance_value)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="8" name="Mutant #54">
			<system-out>LOG = cl.get_logger()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="16" name="Mutant #55">
			<system-out>        return False</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="27" name="Mutant #56">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -25,7 +25,7 @@
     def __init__(self, file_path, sim_match, uniq_id, col_int, is_new_text, new_text=None):
         &quot;&quot;&quot;constructor for cosineIO, which initializes the the input variables needed IO
         processing &quot;&quot;&quot;
-        LOG.info(&quot;\nCosine_UI \nValues passed:\n&quot;)
+        LOG.info(&quot;XX\nCosine_UI \nValues passed:\nXX&quot;)
         self.file_path = file_path
         LOG.info(&quot;Path:%s&quot;, str(self.file_path))
         self.sim_match = sim_match
</failure>
			<system-out>        LOG.info(&quot;\nCosine_UI \nValues passed:\n&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="28" name="Mutant #57">
			<system-out>        self.file_path = file_path</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="29" name="Mutant #58">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -27,7 +27,7 @@
         processing &quot;&quot;&quot;
         LOG.info(&quot;\nCosine_UI \nValues passed:\n&quot;)
         self.file_path = file_path
-        LOG.info(&quot;Path:%s&quot;, str(self.file_path))
+        LOG.info(&quot;XXPath:%sXX&quot;, str(self.file_path))
         self.sim_match = sim_match
         LOG.info(&quot;\nSimilarity Index:%s&quot;, str(self.sim_match))
         self.uniq_id = uniq_id
</failure>
			<system-out>        LOG.info(&quot;Path:%s&quot;, str(self.file_path))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="30" name="Mutant #59">
			<system-out>        self.sim_match = sim_match</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="31" name="Mutant #60">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -29,7 +29,7 @@
         self.file_path = file_path
         LOG.info(&quot;Path:%s&quot;, str(self.file_path))
         self.sim_match = sim_match
-        LOG.info(&quot;\nSimilarity Index:%s&quot;, str(self.sim_match))
+        LOG.info(&quot;XX\nSimilarity Index:%sXX&quot;, str(self.sim_match))
         self.uniq_id = uniq_id
         LOG.info(&quot;\nUnique ID Column:%s&quot;, str(self.uniq_id))
         self.col_int = col_int
</failure>
			<system-out>        LOG.info(&quot;\nSimilarity Index:%s&quot;, str(self.sim_match))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="32" name="Mutant #61">
			<system-out>        self.uniq_id = uniq_id</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="33" name="Mutant #62">
			<error message="bad_timeout" type="timeout">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -31,7 +31,7 @@
         self.sim_match = sim_match
         LOG.info(&quot;\nSimilarity Index:%s&quot;, str(self.sim_match))
         self.uniq_id = uniq_id
-        LOG.info(&quot;\nUnique ID Column:%s&quot;, str(self.uniq_id))
+        LOG.info(&quot;XX\nUnique ID Column:%sXX&quot;, str(self.uniq_id))
         self.col_int = col_int
         LOG.info(&quot;\nColumns of Interest:%s&quot;, str(self.col_int))
         self.is_new_text = is_new_text
</error>
			<system-out>        LOG.info(&quot;\nUnique ID Column:%s&quot;, str(self.uniq_id))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="34" name="Mutant #63">
			<system-out>        self.col_int = col_int</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="35" name="Mutant #64">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -33,7 +33,7 @@
         self.uniq_id = uniq_id
         LOG.info(&quot;\nUnique ID Column:%s&quot;, str(self.uniq_id))
         self.col_int = col_int
-        LOG.info(&quot;\nColumns of Interest:%s&quot;, str(self.col_int))
+        LOG.info(&quot;XX\nColumns of Interest:%sXX&quot;, str(self.col_int))
         self.is_new_text = is_new_text
         self.new_text = new_text
         LOG.info(&quot;\nNew_text:%s&quot;, str(self.new_text))
</failure>
			<system-out>        LOG.info(&quot;\nColumns of Interest:%s&quot;, str(self.col_int))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="36" name="Mutant #65">
			<system-out>        self.is_new_text = is_new_text</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="37" name="Mutant #66">
			<system-out>        self.new_text = new_text</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="38" name="Mutant #67">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -36,7 +36,7 @@
         LOG.info(&quot;\nColumns of Interest:%s&quot;, str(self.col_int))
         self.is_new_text = is_new_text
         self.new_text = new_text
-        LOG.info(&quot;\nNew_text:%s&quot;, str(self.new_text))
+        LOG.info(&quot;XX\nNew_text:%sXX&quot;, str(self.new_text))
         self.data_frame = None
         self.uniq_header = None
 
</failure>
			<system-out>        LOG.info(&quot;\nNew_text:%s&quot;, str(self.new_text))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="39" name="Mutant #68">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -37,7 +37,7 @@
         self.is_new_text = is_new_text
         self.new_text = new_text
         LOG.info(&quot;\nNew_text:%s&quot;, str(self.new_text))
-        self.data_frame = None
+        self.data_frame = &quot;&quot;
         self.uniq_header = None
 
     def __get_file_path(self):
</failure>
			<system-out>        self.data_frame = None</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="40" name="Mutant #69">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -38,7 +38,7 @@
         self.new_text = new_text
         LOG.info(&quot;\nNew_text:%s&quot;, str(self.new_text))
         self.data_frame = None
-        self.uniq_header = None
+        self.uniq_header = &quot;&quot;
 
     def __get_file_path(self):
         &quot;&quot;&quot; Function used for getting the file path where the results can be stored /
</failure>
			<system-out>        self.uniq_header = None</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="50" name="Mutant #70">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -48,7 +48,7 @@
     def __get_file_name(self):
         &quot;&quot;&quot; Function used for getting the input file name which can be further used for naming
         the result &quot;&quot;&quot;
-        file_path = self.file_path.split(&quot;/&quot;)
+        file_path = self.file_path.split(&quot;XX/XX&quot;)
         return os.path.splitext(file_path[-1])[0]
 
     def __get_header(self):
</failure>
			<system-out>        file_path = self.file_path.split(&quot;/&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="50" name="Mutant #71">
			<system-out>        file_path = self.file_path.split(&quot;/&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="51" name="Mutant #72">
			<system-out>        return os.path.splitext(file_path[-1])[0]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="51" name="Mutant #73">
			<system-out>        return os.path.splitext(file_path[-1])[0]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="51" name="Mutant #74">
			<system-out>        return os.path.splitext(file_path[-1])[0]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="59" name="Mutant #75">
			<system-out>        sheet_headers = self.__get_header()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="60" name="Mutant #76">
			<system-out>        self.uniq_header = sheet_headers[int(self.uniq_id)]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="65" name="Mutant #77">
			<system-out>        __duplicated_list = list(self.data_frame.duplicated())</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="66" name="Mutant #78">
			<system-out>        __du_list = []</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="67" name="Mutant #79">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -65,7 +65,7 @@
         # List the duplicate ID
         __duplicated_list = list(self.data_frame.duplicated())
         __du_list = []
-        __data = [[]]
+        __data = None
         # Remove the 'NaN' in case of empty cell and filter only IDs
         for key, item in enumerate(__duplicated_list):
             if item:
</failure>
			<system-out>        __data = [[]]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="72" name="Mutant #80">
			<system-out>        du_list = list(map(lambda x: 0 if is_nan(x) else x, __du_list))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="72" name="Mutant #81">
			<system-out>        du_list = list(map(lambda x: 0 if is_nan(x) else x, __du_list))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="72" name="Mutant #82">
			<system-out>        du_list = list(map(lambda x: 0 if is_nan(x) else x, __du_list))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="73" name="Mutant #83">
			<system-out>        __data = {'Duplicate ID': [nonzero for nonzero in du_list if nonzero != 0]}</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="73" name="Mutant #84">
			<system-out>        __data = {'Duplicate ID': [nonzero for nonzero in du_list if nonzero != 0]}</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="73" name="Mutant #85">
			<system-out>        __data = {'Duplicate ID': [nonzero for nonzero in du_list if nonzero != 0]}</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="73" name="Mutant #86">
			<system-out>        __data = {'Duplicate ID': [nonzero for nonzero in du_list if nonzero != 0]}</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="73" name="Mutant #87">
			<system-out>        __data = {'Duplicate ID': [nonzero for nonzero in du_list if nonzero != 0]}</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="75" name="Mutant #88">
			<system-out>        self.__write_xlsx(pd.DataFrame(__data), &quot;Duplicate_ID&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="79" name="Mutant #89">
			<system-out>        if not os.path.exists(self.file_path):</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="80" name="Mutant #90">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -78,7 +78,7 @@
     def __read_to_panda_df(self):
         &quot;&quot;&quot; Function which read the input data/xlsx to a pandas Data frame &quot;&quot;&quot;
         if not os.path.exists(self.file_path):
-            LOG.error(&quot;\nFile path is invalid&quot;)
+            LOG.error(&quot;XX\nFile path is invalidXX&quot;)
             return False
         self.data_frame = pd.read_excel(self.file_path)
         if self.data_frame.empty:
</failure>
			<system-out>            LOG.error(&quot;\nFile path is invalid&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="81" name="Mutant #91">
			<system-out>            return False</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="82" name="Mutant #92">
			<system-out>        self.data_frame = pd.read_excel(self.file_path)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="84" name="Mutant #93">
			<system-out>            LOG.error(&quot;\nInput data is incorrect/ file is invalid/&quot;</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="85" name="Mutant #94">
			<system-out>                      &quot;It has more than one sheet&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="86" name="Mutant #95">
			<system-out>            return False</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="87" name="Mutant #96">
			<system-out>        return True</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="91" name="Mutant #97">
			<system-out>        self.col_int = list(self.col_int.split(','))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="91" name="Mutant #98">
			<system-out>        self.col_int = list(self.col_int.split(','))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="92" name="Mutant #99">
			<system-out>        __column_of_interest_header = [sheet_headers[int(i)] for i in self.col_int]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="92" name="Mutant #100">
			<system-out>        __column_of_interest_header = [sheet_headers[int(i)] for i in self.col_int]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="93" name="Mutant #101">
			<system-out>        __all_col_int = &quot;,&quot;.join(str(potion) for potion in __column_of_interest_header)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="93" name="Mutant #102">
			<system-out>        __all_col_int = &quot;,&quot;.join(str(potion) for potion in __column_of_interest_header)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="93" name="Mutant #103">
			<system-out>        __all_col_int = &quot;,&quot;.join(str(potion) for potion in __column_of_interest_header)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="94" name="Mutant #104">
			<system-out>        return (uniq_id_header + &quot;,&quot; + __all_col_int).split(&quot;,&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="94" name="Mutant #105">
			<system-out>        return (uniq_id_header + &quot;,&quot; + __all_col_int).split(&quot;,&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="94" name="Mutant #106">
			<system-out>        return (uniq_id_header + &quot;,&quot; + __all_col_int).split(&quot;,&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="94" name="Mutant #107">
			<system-out>        return (uniq_id_header + &quot;,&quot; + __all_col_int).split(&quot;,&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="98" name="Mutant #108">
			<system-out>        sheet_headers = self.__get_header()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="100" name="Mutant #109">
			<system-out>            sheet_headers[int(self.uniq_id)]].ffill()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="102" name="Mutant #110">
			<system-out>            sheet_headers[int(self.uniq_id)], sheet_headers)]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="108" name="Mutant #111">
			<system-out>                           .apply(lambda x: ' '.join(x.dropna()), axis=1)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="108" name="Mutant #112">
			<system-out>                           .apply(lambda x: ' '.join(x.dropna()), axis=1)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="108" name="Mutant #113">
			<system-out>                           .apply(lambda x: ' '.join(x.dropna()), axis=1)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="109" name="Mutant #114">
			<system-out>                           .reset_index(name='Steps'))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="109" name="Mutant #115">
			<system-out>                           .reset_index(name='Steps'))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="110" name="Mutant #116">
			<system-out>        self.data_frame = self.data_frame.groupby(self.uniq_header)['Steps']\</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="111" name="Mutant #117">
			<system-out>            .apply(' '.join).reset_index()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="111" name="Mutant #118">
			<system-out>            .apply(' '.join).reset_index()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="115" name="Mutant #119">
			<system-out>        self.__write_xlsx(self.data_frame, &quot;merged_steps&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="119" name="Mutant #120">
			<system-out>        file_path = os.path.join(self.__get_file_path(), self.__get_file_name() + &quot;_&quot; + name)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="119" name="Mutant #121">
			<system-out>        file_path = os.path.join(self.__get_file_path(), self.__get_file_name() + &quot;_&quot; + name)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="119" name="Mutant #122">
			<system-out>        file_path = os.path.join(self.__get_file_path(), self.__get_file_name() + &quot;_&quot; + name)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="119" name="Mutant #123">
			<system-out>        file_path = os.path.join(self.__get_file_path(), self.__get_file_name() + &quot;_&quot; + name)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="121" name="Mutant #124">
			<system-out>        writer = pd.ExcelWriter('%s.xlsx' % file_path, engine='xlsxwriter')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="121" name="Mutant #125">
			<system-out>        writer = pd.ExcelWriter('%s.xlsx' % file_path, engine='xlsxwriter')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="121" name="Mutant #126">
			<system-out>        writer = pd.ExcelWriter('%s.xlsx' % file_path, engine='xlsxwriter')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="121" name="Mutant #127">
			<system-out>        writer = pd.ExcelWriter('%s.xlsx' % file_path, engine='xlsxwriter')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="128" name="Mutant #128">
			<system-out>        __new_df = pd.DataFrame({self.uniq_header: [&quot;New/ID_TBD&quot;], 'Steps': [self.new_text]})</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="128" name="Mutant #129">
			<system-out>        __new_df = pd.DataFrame({self.uniq_header: [&quot;New/ID_TBD&quot;], 'Steps': [self.new_text]})</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="128" name="Mutant #130">
			<system-out>        __new_df = pd.DataFrame({self.uniq_header: [&quot;New/ID_TBD&quot;], 'Steps': [self.new_text]})</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="129" name="Mutant #131">
			<system-out>        self.data_frame = __new_df.append(self.data_frame, ignore_index=True)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="129" name="Mutant #132">
			<system-out>        self.data_frame = __new_df.append(self.data_frame, ignore_index=True)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="134" name="Mutant #133">
			<system-out>        __reco = []</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="137" name="Mutant #134">
			<system-out>            __uniq_id = self.data_frame[self.uniq_header][master_text_index]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="138" name="Mutant #135">
			<system-out>            master_text = self.data_frame['Steps'][master_text_index]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="138" name="Mutant #136">
			<system-out>            master_text = self.data_frame['Steps'][master_text_index]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="139" name="Mutant #137">
			<system-out>            vector1 = text_to_vector(str(master_text))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="141" name="Mutant #138">
			<system-out>            for match_text_index in range(master_text_index + 1, len(self.data_frame.index)):</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="141" name="Mutant #139">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -139,7 +139,7 @@
             master_text = self.data_frame['Steps'][master_text_index]
             vector1 = text_to_vector(str(master_text))
             # Loop through the rows immediate next from the initially selected in previous loop
-            for match_text_index in range(master_text_index + 1, len(self.data_frame.index)):
+            for match_text_index in range(master_text_index + 2, len(self.data_frame.index)):
                 match_id = self.data_frame[self.uniq_header][match_text_index]
                 match_text = self.data_frame['Steps'][match_text_index]
                 vector2 = text_to_vector(str(match_text))
</failure>
			<system-out>            for match_text_index in range(master_text_index + 1, len(self.data_frame.index)):</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="142" name="Mutant #140">
			<system-out>                match_id = self.data_frame[self.uniq_header][match_text_index]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="143" name="Mutant #141">
			<system-out>                match_text = self.data_frame['Steps'][match_text_index]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="143" name="Mutant #142">
			<system-out>                match_text = self.data_frame['Steps'][match_text_index]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="144" name="Mutant #143">
			<system-out>                vector2 = text_to_vector(str(match_text))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="146" name="Mutant #144">
			<system-out>                cosine = get_cosine(vector1, vector2)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="147" name="Mutant #145">
			<system-out>                if check_tolerance(cosine * 100, int(self.sim_match)):</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="147" name="Mutant #146">
			<system-out>                if check_tolerance(cosine * 100, int(self.sim_match)):</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="148" name="Mutant #147">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -146,7 +146,7 @@
                 # Generate the cosine similarity match value
                 cosine = get_cosine(vector1, vector2)
                 if check_tolerance(cosine * 100, int(self.sim_match)):
-                    print(cosine * 100)
+                    print(cosine / 100)
                     __reco.append({self.uniq_header: str(__uniq_id), 'Potential Match':
                                    str(match_id), 'Similarity Index': str(cosine * 100)})
             if self.is_new_text == 1:
</failure>
			<system-out>                    print(cosine * 100)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="148" name="Mutant #148">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -146,7 +146,7 @@
                 # Generate the cosine similarity match value
                 cosine = get_cosine(vector1, vector2)
                 if check_tolerance(cosine * 100, int(self.sim_match)):
-                    print(cosine * 100)
+                    print(cosine * 101)
                     __reco.append({self.uniq_header: str(__uniq_id), 'Potential Match':
                                    str(match_id), 'Similarity Index': str(cosine * 100)})
             if self.is_new_text == 1:
</failure>
			<system-out>                    print(cosine * 100)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="149" name="Mutant #149">
			<system-out>                    __reco.append({self.uniq_header: str(__uniq_id), 'Potential Match':</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="150" name="Mutant #150">
			<system-out>                                   str(match_id), 'Similarity Index': str(cosine * 100)})</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="150" name="Mutant #151">
			<system-out>                                   str(match_id), 'Similarity Index': str(cosine * 100)})</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="150" name="Mutant #152">
			<system-out>                                   str(match_id), 'Similarity Index': str(cosine * 100)})</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="151" name="Mutant #153">
			<system-out>            if self.is_new_text == 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="151" name="Mutant #154">
			<system-out>            if self.is_new_text == 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="152" name="Mutant #155">
			<system-out>                break</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="154" name="Mutant #156">
			<system-out>        self.__write_xlsx(pd.DataFrame(__reco), &quot;%s_recomendation&quot; % self.sim_match)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="154" name="Mutant #157">
			<system-out>        self.__write_xlsx(pd.DataFrame(__reco), &quot;%s_recomendation&quot; % self.sim_match)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="158" name="Mutant #158">
			<system-out>        __ret_val = True</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="158" name="Mutant #159">
			<system-out>        __ret_val = True</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="160" name="Mutant #160">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -158,7 +158,7 @@
         &quot;&quot;&quot; Function to validate the input parameters &quot;&quot;&quot;
         __ret_val = True
         try:
-            if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 1:
+            if int(self.sim_match) &gt;= 100 or int(self.sim_match) &lt; 1:
                 __ret_val = False
                 LOG.error(&quot;\nSimilarity index is not less than 100&quot;)
             rows, columns = self.data_frame.shape
</failure>
			<system-out>            if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="160" name="Mutant #161">
			<system-out>            if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="160" name="Mutant #162">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -158,7 +158,7 @@
         &quot;&quot;&quot; Function to validate the input parameters &quot;&quot;&quot;
         __ret_val = True
         try:
-            if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 1:
+            if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt;= 1:
                 __ret_val = False
                 LOG.error(&quot;\nSimilarity index is not less than 100&quot;)
             rows, columns = self.data_frame.shape
</failure>
			<system-out>            if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="160" name="Mutant #163">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -158,7 +158,7 @@
         &quot;&quot;&quot; Function to validate the input parameters &quot;&quot;&quot;
         __ret_val = True
         try:
-            if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 1:
+            if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 2:
                 __ret_val = False
                 LOG.error(&quot;\nSimilarity index is not less than 100&quot;)
             rows, columns = self.data_frame.shape
</failure>
			<system-out>            if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="160" name="Mutant #164">
			<system-out>            if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="161" name="Mutant #165">
			<system-out>                __ret_val = False</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="161" name="Mutant #166">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -159,7 +159,7 @@
         __ret_val = True
         try:
             if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 1:
-                __ret_val = False
+                __ret_val = None
                 LOG.error(&quot;\nSimilarity index is not less than 100&quot;)
             rows, columns = self.data_frame.shape
             LOG.info(&quot;\n#Row:%s #Col:%s&quot; % (str(rows), str(columns)))
</failure>
			<system-out>                __ret_val = False</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="162" name="Mutant #167">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -160,7 +160,7 @@
         try:
             if int(self.sim_match) &gt; 100 or int(self.sim_match) &lt; 1:
                 __ret_val = False
-                LOG.error(&quot;\nSimilarity index is not less than 100&quot;)
+                LOG.error(&quot;XX\nSimilarity index is not less than 100XX&quot;)
             rows, columns = self.data_frame.shape
             LOG.info(&quot;\n#Row:%s #Col:%s&quot; % (str(rows), str(columns)))
             input_list = self.col_int.split(',')
</failure>
			<system-out>                LOG.error(&quot;\nSimilarity index is not less than 100&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="163" name="Mutant #168">
			<system-out>            rows, columns = self.data_frame.shape</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="164" name="Mutant #169">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -162,7 +162,7 @@
                 __ret_val = False
                 LOG.error(&quot;\nSimilarity index is not less than 100&quot;)
             rows, columns = self.data_frame.shape
-            LOG.info(&quot;\n#Row:%s #Col:%s&quot; % (str(rows), str(columns)))
+            LOG.info(&quot;XX\n#Row:%s #Col:%sXX&quot; % (str(rows), str(columns)))
             input_list = self.col_int.split(',')
             test_list = [int(i) for i in input_list]
             test_list.append(int(self.uniq_id))
</failure>
			<system-out>            LOG.info(&quot;\n#Row:%s #Col:%s&quot; % (str(rows), str(columns)))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="164" name="Mutant #170">
			<system-out>            LOG.info(&quot;\n#Row:%s #Col:%s&quot; % (str(rows), str(columns)))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="165" name="Mutant #171">
			<system-out>            input_list = self.col_int.split(',')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="165" name="Mutant #172">
			<system-out>            input_list = self.col_int.split(',')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="166" name="Mutant #173">
			<system-out>            test_list = [int(i) for i in input_list]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="166" name="Mutant #174">
			<system-out>            test_list = [int(i) for i in input_list]</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="168" name="Mutant #175">
			<system-out>            list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="168" name="Mutant #176">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -166,7 +166,7 @@
             input_list = self.col_int.split(',')
             test_list = [int(i) for i in input_list]
             test_list.append(int(self.uniq_id))
-            list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))
+            list_check = list(map(lambda item: True if item &lt; columns-1 else False, test_list))
             if False in list_check:
                 __ret_val = False
                 LOG.error(&quot;\nEither or both unique id and col of interest out of range&quot;)
</failure>
			<system-out>            list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="168" name="Mutant #177">
			<system-out>            list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="168" name="Mutant #178">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -166,7 +166,7 @@
             input_list = self.col_int.split(',')
             test_list = [int(i) for i in input_list]
             test_list.append(int(self.uniq_id))
-            list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))
+            list_check = list(map(lambda item: True if item &lt;= columns-2 else False, test_list))
             if False in list_check:
                 __ret_val = False
                 LOG.error(&quot;\nEither or both unique id and col of interest out of range&quot;)
</failure>
			<system-out>            list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="168" name="Mutant #179">
			<system-out>            list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="168" name="Mutant #180">
			<system-out>            list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="168" name="Mutant #181">
			<system-out>            list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="169" name="Mutant #182">
			<system-out>            if False in list_check:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="169" name="Mutant #183">
			<system-out>            if False in list_check:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="170" name="Mutant #184">
			<system-out>                __ret_val = False</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="170" name="Mutant #185">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -168,7 +168,7 @@
             test_list.append(int(self.uniq_id))
             list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))
             if False in list_check:
-                __ret_val = False
+                __ret_val = None
                 LOG.error(&quot;\nEither or both unique id and col of interest out of range&quot;)
             return __ret_val
         except ValueError:
</failure>
			<system-out>                __ret_val = False</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="171" name="Mutant #186">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -169,7 +169,7 @@
             list_check = list(map(lambda item: True if item &lt;= columns-1 else False, test_list))
             if False in list_check:
                 __ret_val = False
-                LOG.error(&quot;\nEither or both unique id and col of interest out of range&quot;)
+                LOG.error(&quot;XX\nEither or both unique id and col of interest out of rangeXX&quot;)
             return __ret_val
         except ValueError:
             LOG.error(&quot;\nInput data is not an integer&quot;)
</failure>
			<system-out>                LOG.error(&quot;\nEither or both unique id and col of interest out of range&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="174" name="Mutant #187">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py
@@ -172,7 +172,7 @@
                 LOG.error(&quot;\nEither or both unique id and col of interest out of range&quot;)
             return __ret_val
         except ValueError:
-            LOG.error(&quot;\nInput data is not an integer&quot;)
+            LOG.error(&quot;XX\nInput data is not an integerXX&quot;)
             return False
 
     def orchestrate_cosine(self):
</failure>
			<system-out>            LOG.error(&quot;\nInput data is not an integer&quot;)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="175" name="Mutant #188">
			<system-out>            return False</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="181" name="Mutant #189">
			<system-out>        if self.__read_to_panda_df() and self.__validate_input():</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="186" name="Mutant #190">
			<system-out>            if self.is_new_text == 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_io.py" line="186" name="Mutant #191">
			<system-out>            if self.is_new_text == 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_logging.py" line="8" name="Mutant #192">
			<system-out>                                                              &quot;cosine_source&quot;,</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_logging.py" line="9" name="Mutant #193">
			<system-out>                                                              &quot;text_similarity.log&quot;)),</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_logging.py" line="10" name="Mutant #194">
			<system-out>                        format='%(asctime)s %(message)s', filemode='a')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_logging.py" line="10" name="Mutant #195">
			<system-out>                        format='%(asctime)s %(message)s', filemode='a')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_logging.py" line="12" name="Mutant #196">
			<system-out>    __logger = logging.getLogger()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="9" name="Mutant #197">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -7,7 +7,7 @@
 from cosine_source.cosine_io import CosineIO
 import cosine_logging as cl
 
-ROW_SPACER = 25
+ROW_SPACER = 26
 LOG = cl.get_logger()
 
 
</failure>
			<system-out>ROW_SPACER = 25</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="9" name="Mutant #198">
			<system-out>ROW_SPACER = 25</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="10" name="Mutant #199">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -8,7 +8,7 @@
 import cosine_logging as cl
 
 ROW_SPACER = 25
-LOG = cl.get_logger()
+LOG = None
 
 
 class TextSimilarityWindow:
</failure>
			<system-out>LOG = cl.get_logger()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="17" name="Mutant #200">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -15,7 +15,7 @@
     &quot;&quot;&quot; This class is used for creating the minimalistic UI for the Text similarity index processor
     which is used to find the similarity index (100%, 99% matching text etc...)
     between text say, requirements, Tests... &quot;&quot;&quot;
-    i = ROW_SPACER
+    i = None
 
     def __init__(self, win):
         &quot;&quot;&quot;constructor for textSimilarityWindow, which initializes
</failure>
			<system-out>    i = ROW_SPACER</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="22" name="Mutant #201">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -20,7 +20,7 @@
     def __init__(self, win):
         &quot;&quot;&quot;constructor for textSimilarityWindow, which initializes
         the input variables needed to fetch from user &quot;&quot;&quot;
-        self.new_text_data = None
+        self.new_text_data = &quot;&quot;
         self.filename = None
         self.new_text = None
         self.is_new_text = IntVar()
</failure>
			<system-out>        self.new_text_data = None</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="23" name="Mutant #202">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -21,7 +21,7 @@
         &quot;&quot;&quot;constructor for textSimilarityWindow, which initializes
         the input variables needed to fetch from user &quot;&quot;&quot;
         self.new_text_data = None
-        self.filename = None
+        self.filename = &quot;&quot;
         self.new_text = None
         self.is_new_text = IntVar()
         self.browsebutton = Button(win, text=&quot;Browse&quot;, command=self.__browse_func)
</failure>
			<system-out>        self.filename = None</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="24" name="Mutant #203">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -22,7 +22,7 @@
         the input variables needed to fetch from user &quot;&quot;&quot;
         self.new_text_data = None
         self.filename = None
-        self.new_text = None
+        self.new_text = &quot;&quot;
         self.is_new_text = IntVar()
         self.browsebutton = Button(win, text=&quot;Browse&quot;, command=self.__browse_func)
         self.browsebutton.place(x=450, y=ROW_SPACER)
</failure>
			<system-out>        self.new_text = None</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="25" name="Mutant #204">
			<system-out>        self.is_new_text = IntVar()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="26" name="Mutant #205">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -24,7 +24,7 @@
         self.filename = None
         self.new_text = None
         self.is_new_text = IntVar()
-        self.browsebutton = Button(win, text=&quot;Browse&quot;, command=self.__browse_func)
+        self.browsebutton = Button(win, text=&quot;XXBrowseXX&quot;, command=self.__browse_func)
         self.browsebutton.place(x=450, y=ROW_SPACER)
 
         def __place_ui_item(text, val, width=10):
</failure>
			<system-out>        self.browsebutton = Button(win, text=&quot;Browse&quot;, command=self.__browse_func)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="26" name="Mutant #206">
			<system-out>        self.browsebutton = Button(win, text=&quot;Browse&quot;, command=self.__browse_func)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="27" name="Mutant #207">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -25,7 +25,7 @@
         self.new_text = None
         self.is_new_text = IntVar()
         self.browsebutton = Button(win, text=&quot;Browse&quot;, command=self.__browse_func)
-        self.browsebutton.place(x=450, y=ROW_SPACER)
+        self.browsebutton.place(x=451, y=ROW_SPACER)
 
         def __place_ui_item(text, val, width=10):
             &quot;&quot;&quot; Function used to place the UI elements to respective place in the UI &quot;&quot;&quot;
</failure>
			<system-out>        self.browsebutton.place(x=450, y=ROW_SPACER)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="29" name="Mutant #208">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -27,7 +27,7 @@
         self.browsebutton = Button(win, text=&quot;Browse&quot;, command=self.__browse_func)
         self.browsebutton.place(x=450, y=ROW_SPACER)
 
-        def __place_ui_item(text, val, width=10):
+        def __place_ui_item(text, val, width=11):
             &quot;&quot;&quot; Function used to place the UI elements to respective place in the UI &quot;&quot;&quot;
             _id = Label(win, text=text)
             _id.place(x=10, y=ROW_SPACER * val)
</failure>
			<system-out>        def __place_ui_item(text, val, width=10):</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="31" name="Mutant #209">
			<system-out>            _id = Label(win, text=text)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="32" name="Mutant #210">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -30,7 +30,7 @@
         def __place_ui_item(text, val, width=10):
             &quot;&quot;&quot; Function used to place the UI elements to respective place in the UI &quot;&quot;&quot;
             _id = Label(win, text=text)
-            _id.place(x=10, y=ROW_SPACER * val)
+            _id.place(x=11, y=ROW_SPACER * val)
             _text_in = Entry(win, width=width)
             _text_in.place(x=200, y=ROW_SPACER * val)
             _text_in.delete(0, END)
</failure>
			<system-out>            _id.place(x=10, y=ROW_SPACER * val)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="32" name="Mutant #211">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -30,7 +30,7 @@
         def __place_ui_item(text, val, width=10):
             &quot;&quot;&quot; Function used to place the UI elements to respective place in the UI &quot;&quot;&quot;
             _id = Label(win, text=text)
-            _id.place(x=10, y=ROW_SPACER * val)
+            _id.place(x=10, y=ROW_SPACER / val)
             _text_in = Entry(win, width=width)
             _text_in.place(x=200, y=ROW_SPACER * val)
             _text_in.delete(0, END)
</failure>
			<system-out>            _id.place(x=10, y=ROW_SPACER * val)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="33" name="Mutant #212">
			<system-out>            _text_in = Entry(win, width=width)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="34" name="Mutant #213">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -32,7 +32,7 @@
             _id = Label(win, text=text)
             _id.place(x=10, y=ROW_SPACER * val)
             _text_in = Entry(win, width=width)
-            _text_in.place(x=200, y=ROW_SPACER * val)
+            _text_in.place(x=201, y=ROW_SPACER * val)
             _text_in.delete(0, END)
             return _id, _text_in
 
</failure>
			<system-out>            _text_in.place(x=200, y=ROW_SPACER * val)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="34" name="Mutant #214">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -32,7 +32,7 @@
             _id = Label(win, text=text)
             _id.place(x=10, y=ROW_SPACER * val)
             _text_in = Entry(win, width=width)
-            _text_in.place(x=200, y=ROW_SPACER * val)
+            _text_in.place(x=200, y=ROW_SPACER / val)
             _text_in.delete(0, END)
             return _id, _text_in
 
</failure>
			<system-out>            _text_in.place(x=200, y=ROW_SPACER * val)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="35" name="Mutant #215">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -33,7 +33,7 @@
             _id.place(x=10, y=ROW_SPACER * val)
             _text_in = Entry(win, width=width)
             _text_in.place(x=200, y=ROW_SPACER * val)
-            _text_in.delete(0, END)
+            _text_in.delete(1, END)
             return _id, _text_in
 
         self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)
</failure>
			<system-out>            _text_in.delete(0, END)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="38" name="Mutant #216">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -36,7 +36,7 @@
             _text_in.delete(0, END)
             return _id, _text_in
 
-        self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)
+        self.path, self.path_t = __place_ui_item(&quot;XXInput File PathXX&quot;, 1, 30)
         self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)
         self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)
         self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)
</failure>
			<system-out>        self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="38" name="Mutant #217">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -36,7 +36,7 @@
             _text_in.delete(0, END)
             return _id, _text_in
 
-        self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)
+        self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 2, 30)
         self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)
         self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)
         self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)
</failure>
			<system-out>        self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="38" name="Mutant #218">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -36,7 +36,7 @@
             _text_in.delete(0, END)
             return _id, _text_in
 
-        self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)
+        self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 31)
         self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)
         self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)
         self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)
</failure>
			<system-out>        self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="38" name="Mutant #219">
			<system-out>        self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="39" name="Mutant #220">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -37,7 +37,7 @@
             return _id, _text_in
 
         self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)
-        self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)
+        self.sin_index, self.sin_index_t = __place_ui_item(&quot;XXSimilarity MatchXX&quot;, 2)
         self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)
         self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)
 
</failure>
			<system-out>        self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="39" name="Mutant #221">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -37,7 +37,7 @@
             return _id, _text_in
 
         self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)
-        self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)
+        self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 3)
         self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)
         self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)
 
</failure>
			<system-out>        self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="39" name="Mutant #222">
			<system-out>        self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="40" name="Mutant #223">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -38,7 +38,7 @@
 
         self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)
         self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)
-        self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)
+        self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;XXUnique ID ColumnXX&quot;, 3)
         self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)
 
         def __new_text_compare():
</failure>
			<system-out>        self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="40" name="Mutant #224">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -38,7 +38,7 @@
 
         self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)
         self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)
-        self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)
+        self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 4)
         self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)
 
         def __new_text_compare():
</failure>
			<system-out>        self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="40" name="Mutant #225">
			<system-out>        self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="41" name="Mutant #226">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -39,7 +39,7 @@
         self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)
         self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)
         self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)
-        self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)
+        self.steps_id, self.steps_t = __place_ui_item(&quot;XXColumns Of InterestXX&quot;, 4)
 
         def __new_text_compare():
             &quot;&quot;&quot; Function used to create the place holder for the User input used
</failure>
			<system-out>        self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="41" name="Mutant #227">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -39,7 +39,7 @@
         self.path, self.path_t = __place_ui_item(&quot;Input File Path&quot;, 1, 30)
         self.sin_index, self.sin_index_t = __place_ui_item(&quot;Similarity Match&quot;, 2)
         self.uniq_id, self.uniq_id_t = __place_ui_item(&quot;Unique ID Column&quot;, 3)
-        self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)
+        self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 5)
 
         def __new_text_compare():
             &quot;&quot;&quot; Function used to create the place holder for the User input used
</failure>
			<system-out>        self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="41" name="Mutant #228">
			<system-out>        self.steps_id, self.steps_t = __place_ui_item(&quot;Columns Of Interest&quot;, 4)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="46" name="Mutant #229">
			<system-out>            if self.is_new_text.get() == 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="46" name="Mutant #230">
			<system-out>            if self.is_new_text.get() == 1:</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="47" name="Mutant #231">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -45,7 +45,7 @@
             &quot;&quot;&quot; Function used to create the place holder for the User input used
             for the new text to be compared &quot;&quot;&quot;
             if self.is_new_text.get() == 1:
-                self.new_text = Entry(win, width=10)
+                self.new_text = Entry(win, width=11)
                 self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)
             else:
                 self.new_text.destroy()
</failure>
			<system-out>                self.new_text = Entry(win, width=10)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="47" name="Mutant #232">
			<system-out>                self.new_text = Entry(win, width=10)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="48" name="Mutant #233">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -46,7 +46,7 @@
             for the new text to be compared &quot;&quot;&quot;
             if self.is_new_text.get() == 1:
                 self.new_text = Entry(win, width=10)
-                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)
+                self.new_text.place(x=201, y=ROW_SPACER * 6, width=340, height=50)
             else:
                 self.new_text.destroy()
 
</failure>
			<system-out>                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="48" name="Mutant #234">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -46,7 +46,7 @@
             for the new text to be compared &quot;&quot;&quot;
             if self.is_new_text.get() == 1:
                 self.new_text = Entry(win, width=10)
-                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)
+                self.new_text.place(x=200, y=ROW_SPACER / 6, width=340, height=50)
             else:
                 self.new_text.destroy()
 
</failure>
			<system-out>                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="48" name="Mutant #235">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -46,7 +46,7 @@
             for the new text to be compared &quot;&quot;&quot;
             if self.is_new_text.get() == 1:
                 self.new_text = Entry(win, width=10)
-                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)
+                self.new_text.place(x=200, y=ROW_SPACER * 7, width=340, height=50)
             else:
                 self.new_text.destroy()
 
</failure>
			<system-out>                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="48" name="Mutant #236">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -46,7 +46,7 @@
             for the new text to be compared &quot;&quot;&quot;
             if self.is_new_text.get() == 1:
                 self.new_text = Entry(win, width=10)
-                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)
+                self.new_text.place(x=200, y=ROW_SPACER * 6, width=341, height=50)
             else:
                 self.new_text.destroy()
 
</failure>
			<system-out>                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="48" name="Mutant #237">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -46,7 +46,7 @@
             for the new text to be compared &quot;&quot;&quot;
             if self.is_new_text.get() == 1:
                 self.new_text = Entry(win, width=10)
-                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)
+                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=51)
             else:
                 self.new_text.destroy()
 
</failure>
			<system-out>                self.new_text.place(x=200, y=ROW_SPACER * 6, width=340, height=50)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="52" name="Mutant #238">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -50,7 +50,7 @@
             else:
                 self.new_text.destroy()
 
-        self.check_is_new_text = Checkbutton(win, text=&quot;New Text Comparison&quot;,
+        self.check_is_new_text = Checkbutton(win, text=&quot;XXNew Text ComparisonXX&quot;,
                                              variable=self.is_new_text,
                                              command=__new_text_compare)
         self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)
</failure>
			<system-out>        self.check_is_new_text = Checkbutton(win, text=&quot;New Text Comparison&quot;,</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="54" name="Mutant #239">
			<system-out>                                             command=__new_text_compare)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="55" name="Mutant #240">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -53,7 +53,7 @@
         self.check_is_new_text = Checkbutton(win, text=&quot;New Text Comparison&quot;,
                                              variable=self.is_new_text,
                                              command=__new_text_compare)
-        self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)
+        self.check_is_new_text.place(x=51, y=ROW_SPACER * 6)
         self.submit = Button(win, text=&quot;Process&quot;, command=self.process)
         self.submit.place(x=250, y=ROW_SPACER * 9)
 
</failure>
			<system-out>        self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="55" name="Mutant #241">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -53,7 +53,7 @@
         self.check_is_new_text = Checkbutton(win, text=&quot;New Text Comparison&quot;,
                                              variable=self.is_new_text,
                                              command=__new_text_compare)
-        self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)
+        self.check_is_new_text.place(x=50, y=ROW_SPACER / 6)
         self.submit = Button(win, text=&quot;Process&quot;, command=self.process)
         self.submit.place(x=250, y=ROW_SPACER * 9)
 
</failure>
			<system-out>        self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="55" name="Mutant #242">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -53,7 +53,7 @@
         self.check_is_new_text = Checkbutton(win, text=&quot;New Text Comparison&quot;,
                                              variable=self.is_new_text,
                                              command=__new_text_compare)
-        self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)
+        self.check_is_new_text.place(x=50, y=ROW_SPACER * 7)
         self.submit = Button(win, text=&quot;Process&quot;, command=self.process)
         self.submit.place(x=250, y=ROW_SPACER * 9)
 
</failure>
			<system-out>        self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="56" name="Mutant #243">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -54,7 +54,7 @@
                                              variable=self.is_new_text,
                                              command=__new_text_compare)
         self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)
-        self.submit = Button(win, text=&quot;Process&quot;, command=self.process)
+        self.submit = Button(win, text=&quot;XXProcessXX&quot;, command=self.process)
         self.submit.place(x=250, y=ROW_SPACER * 9)
 
     def __browse_func(self):
</failure>
			<system-out>        self.submit = Button(win, text=&quot;Process&quot;, command=self.process)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="56" name="Mutant #244">
			<system-out>        self.submit = Button(win, text=&quot;Process&quot;, command=self.process)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="57" name="Mutant #245">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -55,7 +55,7 @@
                                              command=__new_text_compare)
         self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)
         self.submit = Button(win, text=&quot;Process&quot;, command=self.process)
-        self.submit.place(x=250, y=ROW_SPACER * 9)
+        self.submit.place(x=251, y=ROW_SPACER * 9)
 
     def __browse_func(self):
         &quot;&quot;&quot; Function used for providing the Browse to file path in the GUI &quot;&quot;&quot;
</failure>
			<system-out>        self.submit.place(x=250, y=ROW_SPACER * 9)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="57" name="Mutant #246">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -55,7 +55,7 @@
                                              command=__new_text_compare)
         self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)
         self.submit = Button(win, text=&quot;Process&quot;, command=self.process)
-        self.submit.place(x=250, y=ROW_SPACER * 9)
+        self.submit.place(x=250, y=ROW_SPACER / 9)
 
     def __browse_func(self):
         &quot;&quot;&quot; Function used for providing the Browse to file path in the GUI &quot;&quot;&quot;
</failure>
			<system-out>        self.submit.place(x=250, y=ROW_SPACER * 9)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="57" name="Mutant #247">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -55,7 +55,7 @@
                                              command=__new_text_compare)
         self.check_is_new_text.place(x=50, y=ROW_SPACER * 6)
         self.submit = Button(win, text=&quot;Process&quot;, command=self.process)
-        self.submit.place(x=250, y=ROW_SPACER * 9)
+        self.submit.place(x=250, y=ROW_SPACER * 10)
 
     def __browse_func(self):
         &quot;&quot;&quot; Function used for providing the Browse to file path in the GUI &quot;&quot;&quot;
</failure>
			<system-out>        self.submit.place(x=250, y=ROW_SPACER * 9)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="62" name="Mutant #248">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -60,7 +60,7 @@
     def __browse_func(self):
         &quot;&quot;&quot; Function used for providing the Browse to file path in the GUI &quot;&quot;&quot;
         try:
-            self.filename = filedialog.askopenfilename()
+            self.filename = None
             self.path_t.delete(0, END)
             self.path_t.insert(0, str(self.filename))
         except TypeError as error:
</failure>
			<system-out>            self.filename = filedialog.askopenfilename()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="63" name="Mutant #249">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -61,7 +61,7 @@
         &quot;&quot;&quot; Function used for providing the Browse to file path in the GUI &quot;&quot;&quot;
         try:
             self.filename = filedialog.askopenfilename()
-            self.path_t.delete(0, END)
+            self.path_t.delete(1, END)
             self.path_t.insert(0, str(self.filename))
         except TypeError as error:
             print(&quot;Exception at browse_func method:&quot;, str(error))
</failure>
			<system-out>            self.path_t.delete(0, END)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="64" name="Mutant #250">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -62,7 +62,7 @@
         try:
             self.filename = filedialog.askopenfilename()
             self.path_t.delete(0, END)
-            self.path_t.insert(0, str(self.filename))
+            self.path_t.insert(1, str(self.filename))
         except TypeError as error:
             print(&quot;Exception at browse_func method:&quot;, str(error))
             LOG.error(&quot;Error:%s&quot;, str(error))
</failure>
			<system-out>            self.path_t.insert(0, str(self.filename))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="66" name="Mutant #251">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -64,7 +64,7 @@
             self.path_t.delete(0, END)
             self.path_t.insert(0, str(self.filename))
         except TypeError as error:
-            print(&quot;Exception at browse_func method:&quot;, str(error))
+            print(&quot;XXException at browse_func method:XX&quot;, str(error))
             LOG.error(&quot;Error:%s&quot;, str(error))
 
     def __get_new_text(self):
</failure>
			<system-out>            print(&quot;Exception at browse_func method:&quot;, str(error))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="67" name="Mutant #252">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -65,7 +65,7 @@
             self.path_t.insert(0, str(self.filename))
         except TypeError as error:
             print(&quot;Exception at browse_func method:&quot;, str(error))
-            LOG.error(&quot;Error:%s&quot;, str(error))
+            LOG.error(&quot;XXError:%sXX&quot;, str(error))
 
     def __get_new_text(self):
         &quot;&quot;&quot; Function used to get the user input text in case of new text
</failure>
			<system-out>            LOG.error(&quot;Error:%s&quot;, str(error))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="72" name="Mutant #253">
			<system-out>        return str(self.new_text.get()) if self.is_new_text.get() == 1 else None</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="72" name="Mutant #254">
			<system-out>        return str(self.new_text.get()) if self.is_new_text.get() == 1 else None</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="79" name="Mutant #255">
			<system-out>                                     self.is_new_text.get(), self.__get_new_text())</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="82" name="Mutant #256">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -80,7 +80,7 @@
                                      self.is_new_text.get(), self.__get_new_text())
             cosine_io_obj.orchestrate_cosine()
         except TypeError as error:
-            print('Error:', str(error))
+            print('XXError:XX', str(error))
             LOG.error(&quot;Error:%s&quot;, str(error))
 
 
</failure>
			<system-out>            print('Error:', str(error))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="83" name="Mutant #257">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -81,7 +81,7 @@
             cosine_io_obj.orchestrate_cosine()
         except TypeError as error:
             print('Error:', str(error))
-            LOG.error(&quot;Error:%s&quot;, str(error))
+            LOG.error(&quot;XXError:%sXX&quot;, str(error))
 
 
 if __name__ == '__main__':
</failure>
			<system-out>            LOG.error(&quot;Error:%s&quot;, str(error))</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="86" name="Mutant #258">
			<error message="bad_timeout" type="timeout">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -84,7 +84,7 @@
             LOG.error(&quot;Error:%s&quot;, str(error))
 
 
-if __name__ == '__main__':
+if __name__ != '__main__':
     WINDOW = Tk()
     MY_WIN = TextSimilarityWindow(WINDOW)
     WINDOW.title('Text Similarity Index Processor')
</error>
			<system-out>if __name__ == '__main__':</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="86" name="Mutant #259">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -84,7 +84,7 @@
             LOG.error(&quot;Error:%s&quot;, str(error))
 
 
-if __name__ == '__main__':
+if __name__ == 'XX__main__XX':
     WINDOW = Tk()
     MY_WIN = TextSimilarityWindow(WINDOW)
     WINDOW.title('Text Similarity Index Processor')
</failure>
			<system-out>if __name__ == '__main__':</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="87" name="Mutant #260">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -85,7 +85,7 @@
 
 
 if __name__ == '__main__':
-    WINDOW = Tk()
+    WINDOW = None
     MY_WIN = TextSimilarityWindow(WINDOW)
     WINDOW.title('Text Similarity Index Processor')
     WINDOW.geometry(&quot;550x250+10+10&quot;)
</failure>
			<system-out>    WINDOW = Tk()</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="88" name="Mutant #261">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -86,7 +86,7 @@
 
 if __name__ == '__main__':
     WINDOW = Tk()
-    MY_WIN = TextSimilarityWindow(WINDOW)
+    MY_WIN = None
     WINDOW.title('Text Similarity Index Processor')
     WINDOW.geometry(&quot;550x250+10+10&quot;)
     WINDOW.mainloop()
</failure>
			<system-out>    MY_WIN = TextSimilarityWindow(WINDOW)</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="89" name="Mutant #262">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -87,7 +87,7 @@
 if __name__ == '__main__':
     WINDOW = Tk()
     MY_WIN = TextSimilarityWindow(WINDOW)
-    WINDOW.title('Text Similarity Index Processor')
+    WINDOW.title('XXText Similarity Index ProcessorXX')
     WINDOW.geometry(&quot;550x250+10+10&quot;)
     WINDOW.mainloop()
 
</failure>
			<system-out>    WINDOW.title('Text Similarity Index Processor')</system-out>
		</testcase>
		<testcase file="C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py" line="90" name="Mutant #263">
			<failure message="bad_survived" type="failure">--- C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
+++ C:\Projects\PythonRepo\text-de-duplication\cosine_source\cosine_ui.py
@@ -88,6 +88,6 @@
     WINDOW = Tk()
     MY_WIN = TextSimilarityWindow(WINDOW)
     WINDOW.title('Text Similarity Index Processor')
-    WINDOW.geometry(&quot;550x250+10+10&quot;)
+    WINDOW.geometry(&quot;XX550x250+10+10XX&quot;)
     WINDOW.mainloop()
 
</failure>
			<system-out>    WINDOW.geometry(&quot;550x250+10+10&quot;)</system-out>
		</testcase>
	</testsuite>
</testsuites>

